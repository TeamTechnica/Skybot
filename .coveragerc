[run]
branch = True
source = .
omit =
    test/*
    */Cookie.py
    */_LWPCookieJar.py
    */_MozillaCookieJar.py 
    */bisect.py
    */cookielib.py
    */ctypes/*
    */decimal.py
    */encodings/*
    */python_http_client/*
    */htmlentitydefs.py
    */httplib.py
    */mimetools.py
    */mimetypes.py
    */numbers.py
    */rfc822.py
    */sqlite3/*
    */stringprep.py
    */urllib2.py
    */uuid.py
    */fractions.py
    */hmac.py
    */jinja2/*
    */flask_sqlalchemy/*
    */xml/*
    */OpenSSL/*
    */asn1crypto/*
    */certifi/*
    */chardet/*
    */click/*
    */cryptography/*
    */enum/*
    */flask/*
    */idna/*
    */ipaddress.py
    */itsdangerous/*
    */jinja/*
    */markupsafe/*
    */python_http_client/
    */requests/*
    */sendgrid/*
    */six.py
    */sqlalchemy/*
    */twilio/*
    */urllib3/*
    */werkzeug/*

[report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

ignore_errors = True
omit =
    test/*
    */Cookie.py
    */_LWPCookieJar.py
    */_MozillaCookieJar.py 
    */bisect.py
    */cookielib.py
    */ctypes/*
    */decimal.py
    */encodings/*
    */python_http_client/*
    */htmlentitydefs.py
    */httplib.py
    */mimetools.py
    */mimetypes.py
    */numbers.py
    */rfc822.py
    */sqlite3/*
    */stringprep.py
    */urllib2.py
    */uuid.py
    */fractions.py
    */hmac.py
    */jinja2/*
    */flask_sqlalchemy/*
    */xml/*
    */OpenSSL/*
    */asn1crypto/*
    */certifi/*
    */chardet/*
    */click/*
    */cryptography/*
    */enum/*
    */flask/*
    */idna/*
    */ipaddress.py
    */itsdangerous/*
    */jinja/*
    */markupsafe/*
    */python_http_client/
    */requests/*
    */sendgrid/*
    */six.py
    */sqlalchemy/*
    */twilio/*
    */urllib3/*
    */werkzeug/*

[html]
directory = coverage_html_report